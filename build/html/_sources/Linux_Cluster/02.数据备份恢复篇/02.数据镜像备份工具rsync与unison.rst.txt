.. contents::
   :depth: 3
..

02.数据镜像备份工具rsync与unison
================================

rsync简介
---------

rsync是Linux/UNIX系统下的文件同步和数据传输工具，它采用“rsync算法”使
一个客户机和远程文件服务器之间的文件同步。通过rsync可以将同一个服务器的数
据从一个分区备份到另一个分区，也可以将本地系统的数据通过网络传输方式备份
到任何一个远程主机上；rsync可以在中断之后恢复传输；rsync只传输源文件和目
标文件之间不一致的部分；rsync可以执行完整备份或增量备份。

rsync的功能特性
~~~~~~~~~~~~~~~

rsync即remote
sync，从软件名称上就可以看出它所实现的功能。rsync有如下特性：

::

    可以镜像保存整个目录树和文件系统。
    可以增量同步数据，文件传输效率高，因而同步时间很短。
    可以保持原有文件的权限、时间等属性。
    加密传输数据，保证了数据的安全性。
    可以使用rcp、ssh等方式来传输文件，当然也可以直接通过Socket连接传输文件。
    支持匿名传输。

下载与安装rsync软件
~~~~~~~~~~~~~~~~~~~

rysnc的主页地址为：\ ``http://rsync.samba.org/``\ ，这里下载的版本为rsync-3.0.4。
下面进行编译安装，过程如下：

::

    [root@web～]#tar zxvf rsync-3.0.4.tar.gz
    [root@web～]#cd rsync-3.0.4
    [root@web rsync-3.0.4]#./configure
    [root@web rsync-3.0.4]#make
    [root@web rsync-3.0.4]#make install这样就完成了rsync的安装。

利用rsync搭建数据镜像备份系统
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rsync的应用模式 rsync有4种应用模式，

::

    第一种是shell应用模式，也称为本地模式；
    第二种是远程shell模式，它利用SSH执行底层连接和加密传输；
    第三种是查询（也叫列表）模式，与ls命令实现的功能类似；
    最后一种是服务器模式，平时所说的架设rsync服务器就是指这种模式。下面分别对这4种模式进行详细介绍。

下面分别对这4种模式进行详细介绍。

1.本地shell模式

::

    本地shell模式主要用于复制指定目录到另一个目录，例如：
    [root@localhostserver]#rsync -av license/tmp         #将指定的源目录复制到指定的目的目录

    [root@localhost server]#rsync -av license//tmp       #复制指定源目录中的内容到目的目录中
    “-a”即为“--archive”（归档模式），表示以递归方式传输文件，并保持所有文件属性；
    “-v”即为“--verbose”，表示输出详细模式信息。

2.远程shell模式

::

    通过远程shell模式，rsync可以把指定的本地目录复制到另一个系统中。例如：
    [root@localhost server]#rsync -av license192.168.12.251：test


    如果以root用户身份执行此命令，rsync会提示输入远程主机192.168.12.251的root密码。完成密码验证后，会在远程主机的
    root用户根目录下创建test目录，然后将license目录及该目录下的内容复制过
    来。在默认情况下，rsync使用Secure Shell（SSH）作为传输机制。

3.rsync列表模式

::

    在这个模式下，rsync与ls命令有相似的功能。例如：以root用户身份查看远程主机192.168.12.251的test目录下的内容，可以使用如下组合：

    [root@localhostserver]#rsync -a 192.168.12.251:test

    看本地系统中/tmp/license目录的内容，可以使用如下组合：
    [root@localhostserver]#rsync -a /tmp/license

    这种模式是基于C/S模式的，在这种模式下，rsync在后台启用了一个守护进程，这个守护进程在rsync服务器端永久运行，用于接收文件传输请求，因此，客户端既可
    以把文件发送给守护进程，也可以向守护进程请求文件。

企业案例：搭建远程容灾备份系统
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

此处略过，场景为备份Linux文件。使用rsync服务器模式

通过rsync+inotify实现数据的实时备份
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

::

    inotify是一种强大的、细粒度的、异步的文件系统事件监控机制，Linux内核从
    2.6.13版本起，加入了对inotify的支持。通过inotify可以监控文件系统中添
    加、删除、修改、移动等各种细微事件，利用这个内核接口，第三方软件可以监控
    文件系统下文件的各种变化情况，inotify-tools就是这样的一个第三方软件。

inotify可以监控文件系统的各种变化，当文件有任何变动时，会触发rsync同步，这样刚好解决了同步数据的实时
性问题。

企业应用案例：利用rsync+inotify搭建实时同步系统
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

此案例网上一大堆。可以搜索后实施，此处不扩展了。

unison简介
----------

::

    通过前面的介绍可知，rsync数据镜像方式是单向同步的，也就是说，客户端只保持
    与服务器端同步，而在客户端增加或者删除一些文件时，并不会更新到服务器端。
    但是，有些时候，用户希望保持客户端和服务器端双向同步，即任何一端发生数据
    变化，都会更新到另一端。此时不妨试试unison这个工具

::

    unison是一个双向同步镜像工具，在Windows和UNIX平台下都可以使用，支持跨平
    台同步。unison可以使本地磁盘的两个文件夹保持内容一致，同时也支持网络数据
    同步。在内部实现上，unison使用OCaml语言进行开发，通过基于rsync的算法对两
    端文件进行比较，将这两端的文件更新到一致的状态。

unison的几个显著特点如下：

::

    跨平台使用。

    对内核和用户权限没有特别要求。

    unison是双向的，它能自动更新两份副本中没有冲突的部分，有冲突的部分将会显
    示出来由用户选择更新策略。

    只要是能连通的两台主机，就可以运行unison。unison提供两种方法进行远程通
    信，一种是远程shell方式（Remote shell method），另一种是socket方式
    （socket method）。远程shell方式可以由工具ssh来完成，这种方式简单且安
    全，对带宽要求也不高，可以使用类似rsync的压缩传输协议。socket方式要求通
    过发送tcp包在两地之间进行通信，而且，这种方式不能保证数据传输安全，不建议
    使用。

    支持增量同步，每次同步完成后会将文件状态记录下来，在下次同步时，以上次记录的状态为起点开始同步。

    unison有字符界面和基于GTK+的图形界面，这里只介绍如何在字符界面下使用unison。

具体实现步骤自行百度。此工具使用不是热门。
